import{_ as n,c as a,o as l,a2 as p}from"./chunks/framework.D30IVGRC.js";const D=JSON.parse('{"title":"Python面向对象编程","description":"","frontmatter":{"layout":"doc","title":"Python面向对象编程","editLink":true},"headers":[],"relativePath":"python/basic/oop.md","filePath":"python/basic/oop.md"}'),o={name:"python/basic/oop.md"};function e(t,s,c,r,y,F){return l(),a("div",null,s[0]||(s[0]=[p(`<h1 id="python面向对象编程入门指南" tabindex="-1">Python面向对象编程入门指南 <a class="header-anchor" href="#python面向对象编程入门指南" aria-label="Permalink to &quot;Python面向对象编程入门指南&quot;">​</a></h1><h2 id="第一章-理解基本概念" tabindex="-1">第一章：理解基本概念 <a class="header-anchor" href="#第一章-理解基本概念" aria-label="Permalink to &quot;第一章：理解基本概念&quot;">​</a></h2><h3 id="_1-1-什么是类和对象" tabindex="-1">1.1 什么是类和对象？ <a class="header-anchor" href="#_1-1-什么是类和对象" aria-label="Permalink to &quot;1.1 什么是类和对象？&quot;">​</a></h3><p><strong>通俗解释</strong>：</p><ul><li><strong>类（Class）</strong>：就像制作饼干的模具，定义了饼干的形状和成分</li><li><strong>对象（Object）</strong>：用模具做出来的具体饼干，每个饼干可以有不同装饰</li></ul><p><strong>代码示例</strong>：</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 定义一个简单的类（模具）</span></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#FFCB6B;"> Cookie</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    # 初始化方法：创建对象时自动调用</span></span>
<span class="line"><span style="color:#C792EA;">    def</span><span style="color:#82AAFF;"> __init__</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> topping</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        # self代表当前创建的饼干对象</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        # topping是装饰配料，每个饼干可以不同</span></span>
<span class="line"><span style="color:#BABED8;">        self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">topping</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> topping  </span><span style="color:#676E95;font-style:italic;"># 给饼干添加装饰属性</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    # 定义对象方法（饼干的功能）</span></span>
<span class="line"><span style="color:#C792EA;">    def</span><span style="color:#82AAFF;"> describe</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#82AAFF;">        print</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">f</span><span style="color:#C3E88D;">&quot;这是一块</span><span style="color:#F78C6C;">{</span><span style="color:#BABED8;">self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">topping</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;">饼干&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 创建两个饼干对象cookie1 = Cookie(&quot;巧克力豆&quot;)  # 使用模具制作第一块饼干</span></span>
<span class="line"><span style="color:#BABED8;">cookie2 </span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;"> Cookie</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">糖霜</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span><span style="color:#676E95;font-style:italic;">      # 制作第二块饼干</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 让饼干执行方法</span></span>
<span class="line"><span style="color:#BABED8;">cookie1</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">describe</span><span style="color:#89DDFF;">()</span><span style="color:#676E95;font-style:italic;">  # 输出：这是一块巧克力豆饼干</span></span>
<span class="line"><span style="color:#BABED8;">cookie2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">describe</span><span style="color:#89DDFF;">()</span><span style="color:#676E95;font-style:italic;">  # 输出：这是一块糖霜饼干</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h2 id="第二章-类与对象详解" tabindex="-1">第二章：类与对象详解 <a class="header-anchor" href="#第二章-类与对象详解" aria-label="Permalink to &quot;第二章：类与对象详解&quot;">​</a></h2><h3 id="_2-1-构造方法-init" tabindex="-1">2.1 构造方法 <strong>init</strong> <a class="header-anchor" href="#_2-1-构造方法-init" aria-label="Permalink to &quot;2.1 构造方法 __init__&quot;">​</a></h3><p><strong>关键点解释</strong>：</p><ul><li><code>__init__</code> 方法在创建对象时自动执行</li><li><code>self</code> 参数代表当前对象实例，必须放在第一个参数位置</li><li>通过<code>self.属性名</code>定义对象属性</li></ul><p><strong>带详细注释的代码</strong>：</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#C792EA;">class</span><span style="color:#FFCB6B;"> Student</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    # 构造方法：当执行 Student() 时自动调用</span></span>
<span class="line"><span style="color:#C792EA;">    def</span><span style="color:#82AAFF;"> __init__</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> name</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> age</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        # 给当前对象添加name属性</span></span>
<span class="line"><span style="color:#BABED8;">        self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">name</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> name  </span><span style="color:#676E95;font-style:italic;"># self.name 是对象属性，name 是传入参数</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        # 给当前对象添加age属性</span></span>
<span class="line"><span style="color:#BABED8;">        self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">age</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> age</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        # 类属性：所有学生共享的学校名称</span></span>
<span class="line"><span style="color:#BABED8;">        self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">school</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">阳光中学</span><span style="color:#89DDFF;">&quot;</span><span style="color:#676E95;font-style:italic;">  # 所有学生的school属性初始值相同</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">    def</span><span style="color:#82AAFF;"> show_info</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#82AAFF;">        print</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">f</span><span style="color:#C3E88D;">&quot;</span><span style="color:#F78C6C;">{</span><span style="color:#BABED8;">self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">name</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;">，</span><span style="color:#F78C6C;">{</span><span style="color:#BABED8;">self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">age</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;">岁，就读于</span><span style="color:#F78C6C;">{</span><span style="color:#BABED8;">self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">school</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 创建学生对象</span></span>
<span class="line"><span style="color:#BABED8;">stu1 </span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;"> Student</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">小明</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 15</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">stu2 </span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;"> Student</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">小红</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 16</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">stu1</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">show_info</span><span style="color:#89DDFF;">()</span><span style="color:#676E95;font-style:italic;">  # 输出：小明，15岁，就读于阳光中学</span></span>
<span class="line"><span style="color:#BABED8;">stu2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">show_info</span><span style="color:#89DDFF;">()</span><span style="color:#676E95;font-style:italic;">  # 输出：小红，16岁，就读于阳光中学</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h2 id="第三章-继承与多态" tabindex="-1">第三章：继承与多态 <a class="header-anchor" href="#第三章-继承与多态" aria-label="Permalink to &quot;第三章：继承与多态&quot;">​</a></h2><h3 id="_3-1-基础继承示例" tabindex="-1">3.1 基础继承示例 <a class="header-anchor" href="#_3-1-基础继承示例" aria-label="Permalink to &quot;3.1 基础继承示例&quot;">​</a></h3><p><strong>逐步说明</strong>：</p><ol><li>创建父类（基类）定义通用属性和方法</li><li>子类通过继承获得父类的功能</li><li>子类可以添加新功能或修改继承的功能</li></ol><p><strong>详细代码</strong>：</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 父类：交通工具</span></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#FFCB6B;"> Vehicle</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#C792EA;">    def</span><span style="color:#82AAFF;"> __init__</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> brand</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#BABED8;">        self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">brand</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> brand  </span><span style="color:#676E95;font-style:italic;"># 品牌属性</span></span>
<span class="line"><span style="color:#BABED8;">    </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    # 通用方法</span></span>
<span class="line"><span style="color:#C792EA;">    def</span><span style="color:#82AAFF;"> start</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#82AAFF;">        print</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">启动交通工具</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 子类：汽车（继承自Vehicle）</span></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#FFCB6B;"> Car</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">Vehicle</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#C792EA;">    def</span><span style="color:#82AAFF;"> __init__</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> brand</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> wheels</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        # 调用父类的构造方法初始化brand</span></span>
<span class="line"><span style="color:#FFCB6B;">        super</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">__init__</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">brand</span><span style="color:#89DDFF;">)</span><span style="color:#676E95;font-style:italic;">  # super()代表父类</span></span>
<span class="line"><span style="color:#BABED8;">        self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">wheels</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> wheels    </span><span style="color:#676E95;font-style:italic;"># 添加子类特有属性</span></span>
<span class="line"><span style="color:#BABED8;">    </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    # 重写父类方法（多态）</span></span>
<span class="line"><span style="color:#C792EA;">    def</span><span style="color:#82AAFF;"> start</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#82AAFF;">        print</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">f</span><span style="color:#C3E88D;">&quot;</span><span style="color:#F78C6C;">{</span><span style="color:#BABED8;">self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">brand</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;">汽车正在点火启动&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">    </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    # 子类特有方法</span></span>
<span class="line"><span style="color:#C792EA;">    def</span><span style="color:#82AAFF;"> open_sunroof</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#82AAFF;">        print</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">打开天窗</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 创建实例</span></span>
<span class="line"><span style="color:#BABED8;">my_car </span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;"> Car</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">比亚迪</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 4</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">my_car</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">brand</span><span style="color:#89DDFF;">)</span><span style="color:#676E95;font-style:italic;">   # 输出：比亚迪（继承自父类）</span></span>
<span class="line"><span style="color:#BABED8;">my_car</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">start</span><span style="color:#89DDFF;">()</span><span style="color:#676E95;font-style:italic;">        # 输出：比亚迪汽车正在点火启动（重写后的方法）</span></span>
<span class="line"><span style="color:#BABED8;">my_car</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">open_sunroof</span><span style="color:#89DDFF;">()</span><span style="color:#676E95;font-style:italic;"> # 输出：打开天窗（子类特有方法）</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><h2 id="第四章-类的高级特性" tabindex="-1">第四章：类的高级特性 <a class="header-anchor" href="#第四章-类的高级特性" aria-label="Permalink to &quot;第四章：类的高级特性&quot;">​</a></h2><h3 id="_4-1-私有属性与保护属性" tabindex="-1">4.1 私有属性与保护属性 <a class="header-anchor" href="#_4-1-私有属性与保护属性" aria-label="Permalink to &quot;4.1 私有属性与保护属性&quot;">​</a></h3><p><strong>访问控制说明</strong>：</p><ul><li><strong>公有属性</strong>：直接通过对象访问（如<code>obj.attr</code>）</li><li><strong>保护属性</strong>：约定用单下划线开头（如<code>_attr</code>），提示不要直接访问</li><li><strong>私有属性</strong>：双下划线开头（如<code>__attr</code>），无法直接访问</li></ul><p><strong>代码示例</strong>：</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#C792EA;">class</span><span style="color:#FFCB6B;"> BankAccount</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#C792EA;">    def</span><span style="color:#82AAFF;"> __init__</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> password</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#BABED8;">        self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">balance</span><span style="color:#89DDFF;"> =</span><span style="color:#F78C6C;"> 0</span><span style="color:#676E95;font-style:italic;">      # 公有属性</span></span>
<span class="line"><span style="color:#BABED8;">        self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">_password</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> password  </span><span style="color:#676E95;font-style:italic;"># 保护属性（约定不直接访问）</span></span>
<span class="line"><span style="color:#BABED8;">        self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">__secret_code</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">ABC123</span><span style="color:#89DDFF;">&quot;</span><span style="color:#676E95;font-style:italic;">  # 私有属性（实际会被重命名为_BankAccount__secret_code）</span></span>
<span class="line"><span style="color:#BABED8;">    </span></span>
<span class="line"><span style="color:#C792EA;">    def</span><span style="color:#82AAFF;"> check_balance</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> pwd</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        if</span><span style="color:#BABED8;"> pwd </span><span style="color:#89DDFF;">==</span><span style="color:#BABED8;"> self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">_password</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">            return</span><span style="color:#BABED8;"> self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">balance</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        else</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">            return</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">密码错误</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 使用示例</span></span>
<span class="line"><span style="color:#BABED8;">account </span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;"> BankAccount</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">123456</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 访问公有属性</span></span>
<span class="line"><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">account</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">balance</span><span style="color:#89DDFF;">)</span><span style="color:#676E95;font-style:italic;">  # 正确：0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 访问保护属性（不推荐但可以）</span></span>
<span class="line"><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">account</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">_password</span><span style="color:#89DDFF;">)</span><span style="color:#676E95;font-style:italic;">  # 输出：123456（会有警告提示）</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 访问私有属性（会报错）</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># print(account.__secret_code)  # 错误：AttributeError</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 正确访问方式（实际开发中不应这样做）</span></span>
<span class="line"><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">account</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">_BankAccount__secret_code</span><span style="color:#89DDFF;">)</span><span style="color:#676E95;font-style:italic;">  # 输出：ABC123</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><h2 id="第五章-综合应用实例" tabindex="-1">第五章：综合应用实例 <a class="header-anchor" href="#第五章-综合应用实例" aria-label="Permalink to &quot;第五章：综合应用实例&quot;">​</a></h2><h3 id="_5-1-学生管理系统" tabindex="-1">5.1 学生管理系统 <a class="header-anchor" href="#_5-1-学生管理系统" aria-label="Permalink to &quot;5.1 学生管理系统&quot;">​</a></h3><p><strong>功能需求</strong>：</p><ul><li>添加学生信息</li><li>显示所有学生</li><li>根据姓名查找学生</li></ul><p><strong>完整代码</strong>：</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#C792EA;">class</span><span style="color:#FFCB6B;"> StudentManager</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#C792EA;">    def</span><span style="color:#82AAFF;"> __init__</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#BABED8;">        self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">students</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> []</span><span style="color:#676E95;font-style:italic;">  # 存储所有学生对象的列表</span></span>
<span class="line"><span style="color:#BABED8;">    </span></span>
<span class="line"><span style="color:#C792EA;">    def</span><span style="color:#82AAFF;"> add_student</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> name</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> age</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        # 创建学生对象并添加到列表</span></span>
<span class="line"><span style="color:#BABED8;">        new_student </span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;"> Student</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">name</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> age</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">        self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">students</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">append</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">new_student</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#82AAFF;">        print</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">f</span><span style="color:#C3E88D;">&quot;成功添加学生：</span><span style="color:#F78C6C;">{</span><span style="color:#82AAFF;">name</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">    </span></span>
<span class="line"><span style="color:#C792EA;">    def</span><span style="color:#82AAFF;"> show_all</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#82AAFF;">        print</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">\\n</span><span style="color:#C3E88D;">当前所有学生：</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        for</span><span style="color:#BABED8;"> index</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> student </span><span style="color:#89DDFF;font-style:italic;">in</span><span style="color:#82AAFF;"> enumerate</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;">self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">students</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 1</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#82AAFF;">            print</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">f</span><span style="color:#C3E88D;">&quot;</span><span style="color:#F78C6C;">{</span><span style="color:#82AAFF;">index</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;">. 姓名：</span><span style="color:#F78C6C;">{</span><span style="color:#82AAFF;">student</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">name</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;">，年龄：</span><span style="color:#F78C6C;">{</span><span style="color:#82AAFF;">student</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">age</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">    </span></span>
<span class="line"><span style="color:#C792EA;">    def</span><span style="color:#82AAFF;"> find_student</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> name</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#BABED8;">        found </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> [</span><span style="color:#BABED8;">s </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#BABED8;"> s </span><span style="color:#89DDFF;font-style:italic;">in</span><span style="color:#BABED8;"> self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">students</span><span style="color:#89DDFF;font-style:italic;"> if</span><span style="color:#BABED8;"> s</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">name</span><span style="color:#89DDFF;"> ==</span><span style="color:#BABED8;"> name</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        if</span><span style="color:#BABED8;"> found</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#82AAFF;">            print</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">f</span><span style="color:#C3E88D;">&quot;找到学生</span><span style="color:#F78C6C;">{</span><span style="color:#82AAFF;">name</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;">，年龄：</span><span style="color:#F78C6C;">{</span><span style="color:#82AAFF;">found</span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">].</span><span style="color:#F07178;">age</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        else</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#82AAFF;">            print</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">f</span><span style="color:#C3E88D;">&quot;未找到学生：</span><span style="color:#F78C6C;">{</span><span style="color:#82AAFF;">name</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#FFCB6B;"> Student</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#C792EA;">    def</span><span style="color:#82AAFF;"> __init__</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> name</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> age</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#BABED8;">        self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">name</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> name</span></span>
<span class="line"><span style="color:#BABED8;">        self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">age</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> age</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 使用示例</span></span>
<span class="line"><span style="color:#BABED8;">manager </span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;"> StudentManager</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#BABED8;">manager</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">add_student</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">张三</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 18</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">manager</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">add_student</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">李四</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 19</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">manager</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">show_all</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#BABED8;">manager</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">find_student</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">张三</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><h2 id="学习建议" tabindex="-1">学习建议 <a class="header-anchor" href="#学习建议" aria-label="Permalink to &quot;学习建议&quot;">​</a></h2><ol><li><p><strong>练习项目</strong>：</p><ul><li>图书管理系统（Book类 + Library类）</li><li>简易购物车系统（Product类 + Cart类）</li></ul></li><li><p><strong>调试技巧</strong>：</p><ul><li>使用<code>print(dir(obj))</code>查看对象属性</li><li>在VSCode中使用调试器逐步执行</li></ul></li><li><p><strong>常见错误</strong>：</p><ul><li>忘记写<code>self</code>参数</li><li>混淆类属性和实例属性</li><li>错误使用继承中的<code>super()</code></li></ul></li></ol>`,33)]))}const b=n(o,[["render",e]]);export{D as __pageData,b as default};

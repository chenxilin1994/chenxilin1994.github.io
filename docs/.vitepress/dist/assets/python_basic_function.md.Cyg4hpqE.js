import{_ as n,c as a,o as l,a2 as p}from"./chunks/framework.D30IVGRC.js";const D=JSON.parse('{"title":"Python函数编程详解","description":"","frontmatter":{"layout":"doc","title":"Python函数编程详解","editLink":true},"headers":[],"relativePath":"python/basic/function.md","filePath":"python/basic/function.md"}'),e={name:"python/basic/function.md"};function o(t,s,r,c,F,i){return l(),a("div",null,s[0]||(s[0]=[p(`<h1 id="函数编程精要" tabindex="-1">函数编程精要 <a class="header-anchor" href="#函数编程精要" aria-label="Permalink to &quot;函数编程精要&quot;">​</a></h1><h2 id="_1-函数定义基础" tabindex="-1">1. 函数定义基础 <a class="header-anchor" href="#_1-函数定义基础" aria-label="Permalink to &quot;1. 函数定义基础&quot;">​</a></h2><h3 id="基本语法" tabindex="-1">基本语法 <a class="header-anchor" href="#基本语法" aria-label="Permalink to &quot;基本语法&quot;">​</a></h3><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#C792EA;">def</span><span style="color:#82AAFF;"> calculate_area</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">width</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> height</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    &quot;&quot;&quot;</span><span style="color:#676E95;font-style:italic;">计算矩形面积</span><span style="color:#89DDFF;font-style:italic;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    return</span><span style="color:#BABED8;"> width </span><span style="color:#89DDFF;">*</span><span style="color:#BABED8;"> height</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">calculate_area</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 3</span><span style="color:#89DDFF;">))</span><span style="color:#676E95;font-style:italic;">  # 输出：15</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="返回多个值" tabindex="-1">返回多个值 <a class="header-anchor" href="#返回多个值" aria-label="Permalink to &quot;返回多个值&quot;">​</a></h3><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#C792EA;">def</span><span style="color:#82AAFF;"> analyze_numbers</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">numbers</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    return</span><span style="color:#82AAFF;"> min</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">numbers</span><span style="color:#89DDFF;">),</span><span style="color:#82AAFF;"> max</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">numbers</span><span style="color:#89DDFF;">),</span><span style="color:#82AAFF;"> sum</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">numbers</span><span style="color:#89DDFF;">)/</span><span style="color:#82AAFF;">len</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">numbers</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">min_val</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> max_val</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> avg_val </span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;"> analyze_numbers</span><span style="color:#89DDFF;">([</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">7</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">])</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="_2-参数传递机制" tabindex="-1">2. 参数传递机制 <a class="header-anchor" href="#_2-参数传递机制" aria-label="Permalink to &quot;2. 参数传递机制&quot;">​</a></h2><h3 id="参数类型对比" tabindex="-1">参数类型对比 <a class="header-anchor" href="#参数类型对比" aria-label="Permalink to &quot;参数类型对比&quot;">​</a></h3><table tabindex="0"><thead><tr><th>参数类型</th><th>示例</th><th>说明</th></tr></thead><tbody><tr><td>位置参数</td><td><code>func(a, b)</code></td><td>按顺序传递</td></tr><tr><td>关键字参数</td><td><code>func(b=3, a=1)</code></td><td>明确指定参数名</td></tr><tr><td>默认参数</td><td><code>def func(a=0)</code></td><td>参数默认值</td></tr><tr><td>可变参数</td><td><code>def func(*args)</code></td><td>接收元组</td></tr><tr><td>关键字可变参数</td><td><code>def func(**kwargs)</code></td><td>接收字典</td></tr></tbody></table><h3 id="参数组合示例" tabindex="-1">参数组合示例 <a class="header-anchor" href="#参数组合示例" aria-label="Permalink to &quot;参数组合示例&quot;">​</a></h3><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#C792EA;">def</span><span style="color:#82AAFF;"> complex_func</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">a</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> b</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> *</span><span style="color:#BABED8;font-style:italic;">args</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> **</span><span style="color:#BABED8;font-style:italic;">kwargs</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#82AAFF;">    print</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">f</span><span style="color:#C3E88D;">&quot;a=</span><span style="color:#F78C6C;">{</span><span style="color:#82AAFF;">a</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;">, b=</span><span style="color:#F78C6C;">{</span><span style="color:#82AAFF;">b</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#82AAFF;">    print</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">可变参数:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> args</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#82AAFF;">    print</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">关键字参数:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> kwargs</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">complex_func</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 3</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 4</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> key1</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">v1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> key2</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">v2</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="_3-作用域规则" tabindex="-1">3. 作用域规则 <a class="header-anchor" href="#_3-作用域规则" aria-label="Permalink to &quot;3. 作用域规则&quot;">​</a></h2><h3 id="legb规则" tabindex="-1">LEGB规则 <a class="header-anchor" href="#legb规则" aria-label="Permalink to &quot;LEGB规则&quot;">​</a></h3><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#BABED8;">x </span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;"> 10</span><span style="color:#676E95;font-style:italic;">  # Global</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">def</span><span style="color:#82AAFF;"> outer</span><span style="color:#89DDFF;">():</span></span>
<span class="line"><span style="color:#BABED8;">    y </span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;"> 20</span><span style="color:#676E95;font-style:italic;">  # Enclosing</span></span>
<span class="line"><span style="color:#C792EA;">    def</span><span style="color:#82AAFF;"> inner</span><span style="color:#89DDFF;">():</span></span>
<span class="line"><span style="color:#BABED8;">        z </span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;"> 30</span><span style="color:#676E95;font-style:italic;">  # Local</span></span>
<span class="line"><span style="color:#82AAFF;">        print</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">x </span><span style="color:#89DDFF;">+</span><span style="color:#82AAFF;"> y </span><span style="color:#89DDFF;">+</span><span style="color:#82AAFF;"> z</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#82AAFF;">    inner</span><span style="color:#89DDFF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">outer</span><span style="color:#89DDFF;">()</span><span style="color:#676E95;font-style:italic;">  # 输出：60</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="global与nonlocal" tabindex="-1">global与nonlocal <a class="header-anchor" href="#global与nonlocal" aria-label="Permalink to &quot;global与nonlocal&quot;">​</a></h3><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#BABED8;">counter </span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;"> 0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">def</span><span style="color:#82AAFF;"> increment</span><span style="color:#89DDFF;">():</span></span>
<span class="line"><span style="color:#C792EA;">    global</span><span style="color:#BABED8;"> counter</span></span>
<span class="line"><span style="color:#BABED8;">    counter </span><span style="color:#89DDFF;">+=</span><span style="color:#F78C6C;"> 1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">def</span><span style="color:#82AAFF;"> outer</span><span style="color:#89DDFF;">():</span></span>
<span class="line"><span style="color:#BABED8;">    count </span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;"> 0</span></span>
<span class="line"><span style="color:#C792EA;">    def</span><span style="color:#82AAFF;"> inner</span><span style="color:#89DDFF;">():</span></span>
<span class="line"><span style="color:#C792EA;">        nonlocal</span><span style="color:#BABED8;"> count</span></span>
<span class="line"><span style="color:#BABED8;">        count </span><span style="color:#89DDFF;">+=</span><span style="color:#F78C6C;"> 1</span></span>
<span class="line"><span style="color:#82AAFF;">    inner</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#82AAFF;">    print</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">count</span><span style="color:#89DDFF;">)</span><span style="color:#676E95;font-style:italic;">  # 输出：1</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h2 id="_4-lambda函数" tabindex="-1">4. Lambda函数 <a class="header-anchor" href="#_4-lambda函数" aria-label="Permalink to &quot;4. Lambda函数&quot;">​</a></h2><h3 id="使用场景" tabindex="-1">使用场景 <a class="header-anchor" href="#使用场景" aria-label="Permalink to &quot;使用场景&quot;">​</a></h3><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 简单运算</span></span>
<span class="line"><span style="color:#BABED8;">square </span><span style="color:#89DDFF;">=</span><span style="color:#C792EA;"> lambda</span><span style="color:#BABED8;font-style:italic;"> x</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> x</span><span style="color:#89DDFF;">**</span><span style="color:#F78C6C;">2</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 排序辅助</span></span>
<span class="line"><span style="color:#BABED8;">users </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> [{</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">name</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Alice</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">age</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">25</span><span style="color:#89DDFF;">},</span><span style="color:#89DDFF;"> {</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">name</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Bob</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">age</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">30</span><span style="color:#89DDFF;">}]</span></span>
<span class="line"><span style="color:#BABED8;">users</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sort</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">key</span><span style="color:#89DDFF;">=</span><span style="color:#C792EA;">lambda</span><span style="color:#BABED8;font-style:italic;"> x</span><span style="color:#89DDFF;">:</span><span style="color:#82AAFF;"> x</span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">age</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">])</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="限制说明" tabindex="-1">限制说明 <a class="header-anchor" href="#限制说明" aria-label="Permalink to &quot;限制说明&quot;">​</a></h3><ul><li>只能包含单个表达式</li><li>没有语句（if表达式可用）</li><li>不适合复杂逻辑</li></ul><h2 id="_5-装饰器原理" tabindex="-1">5. 装饰器原理 <a class="header-anchor" href="#_5-装饰器原理" aria-label="Permalink to &quot;5. 装饰器原理&quot;">​</a></h2><h3 id="基础实现" tabindex="-1">基础实现 <a class="header-anchor" href="#基础实现" aria-label="Permalink to &quot;基础实现&quot;">​</a></h3><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#C792EA;">def</span><span style="color:#82AAFF;"> logger</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">func</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#C792EA;">    def</span><span style="color:#82AAFF;"> wrapper</span><span style="color:#89DDFF;">(*</span><span style="color:#BABED8;font-style:italic;">args</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> **</span><span style="color:#BABED8;font-style:italic;">kwargs</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#82AAFF;">        print</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">f</span><span style="color:#C3E88D;">&quot;调用函数：</span><span style="color:#F78C6C;">{</span><span style="color:#82AAFF;">func</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">__name__</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        return</span><span style="color:#82AAFF;"> func</span><span style="color:#89DDFF;">(*</span><span style="color:#82AAFF;">args</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> **</span><span style="color:#82AAFF;">kwargs</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    return</span><span style="color:#BABED8;"> wrapper</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">logger</span></span>
<span class="line"><span style="color:#C792EA;">def</span><span style="color:#82AAFF;"> add</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">a</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> b</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    return</span><span style="color:#BABED8;"> a </span><span style="color:#89DDFF;">+</span><span style="color:#BABED8;"> b</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">add</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">))</span><span style="color:#676E95;font-style:italic;">  # 先打印日志再返回结果</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="带参数的装饰器" tabindex="-1">带参数的装饰器 <a class="header-anchor" href="#带参数的装饰器" aria-label="Permalink to &quot;带参数的装饰器&quot;">​</a></h3><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#C792EA;">def</span><span style="color:#82AAFF;"> repeat</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">times</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#C792EA;">    def</span><span style="color:#82AAFF;"> decorator</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">func</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#C792EA;">        def</span><span style="color:#82AAFF;"> wrapper</span><span style="color:#89DDFF;">(*</span><span style="color:#BABED8;font-style:italic;">args</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> **</span><span style="color:#BABED8;font-style:italic;">kwargs</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">            for</span><span style="color:#BABED8;"> _ </span><span style="color:#89DDFF;font-style:italic;">in</span><span style="color:#82AAFF;"> range</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">times</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#BABED8;">                result </span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;"> func</span><span style="color:#89DDFF;">(*</span><span style="color:#82AAFF;">args</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> **</span><span style="color:#82AAFF;">kwargs</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">            return</span><span style="color:#BABED8;"> result</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        return</span><span style="color:#BABED8;"> wrapper</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    return</span><span style="color:#BABED8;"> decorator</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">repeat</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#C792EA;">def</span><span style="color:#82AAFF;"> greet</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">name</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#82AAFF;">    print</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">f</span><span style="color:#C3E88D;">&quot;Hello </span><span style="color:#F78C6C;">{</span><span style="color:#82AAFF;">name</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;">!&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">greet</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Alice</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span><span style="color:#676E95;font-style:italic;">  # 输出3次问候语</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h2 id="常见错误排查" tabindex="-1">常见错误排查 <a class="header-anchor" href="#常见错误排查" aria-label="Permalink to &quot;常见错误排查&quot;">​</a></h2><p>❌ 修改不可变默认参数</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#C792EA;">def</span><span style="color:#82AAFF;"> append_to</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">num</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> target</span><span style="color:#89DDFF;">=[]):</span><span style="color:#676E95;font-style:italic;">  # 危险！</span></span>
<span class="line"><span style="color:#BABED8;">    target</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">append</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">num</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    return</span><span style="color:#BABED8;"> target</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">append_to</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">))</span><span style="color:#676E95;font-style:italic;">  # [1]</span></span>
<span class="line"><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">append_to</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">))</span><span style="color:#676E95;font-style:italic;">  # [1,2] （非预期结果）</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>✅ 正确方式</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#C792EA;">def</span><span style="color:#82AAFF;"> append_to</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">num</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> target</span><span style="color:#89DDFF;">=None):</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    if</span><span style="color:#BABED8;"> target </span><span style="color:#89DDFF;">is</span><span style="color:#89DDFF;"> None:</span></span>
<span class="line"><span style="color:#BABED8;">        target </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> []</span></span>
<span class="line"><span style="color:#BABED8;">    target</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">append</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">num</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    return</span><span style="color:#BABED8;"> target</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="最佳实践建议" tabindex="-1">最佳实践建议 <a class="header-anchor" href="#最佳实践建议" aria-label="Permalink to &quot;最佳实践建议&quot;">​</a></h2><ol><li><p><strong>单一职责原则</strong><br> 每个函数只完成一个明确的任务</p></li><li><p><strong>合理控制函数长度</strong><br> 建议不超过50行代码</p></li><li><p><strong>使用类型注解</strong>（Python3.5+）</p></li></ol><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> typing </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> List</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> Tuple</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">def</span><span style="color:#82AAFF;"> process_data</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">data</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> List</span><span style="color:#89DDFF;">[</span><span style="color:#FFCB6B;">int</span><span style="color:#89DDFF;">])</span><span style="color:#89DDFF;"> -&gt;</span><span style="color:#BABED8;"> Tuple</span><span style="color:#89DDFF;">[</span><span style="color:#FFCB6B;">float</span><span style="color:#89DDFF;">,</span><span style="color:#FFCB6B;"> float</span><span style="color:#89DDFF;">]:</span></span>
<span class="line"><span style="color:#BABED8;">    ...</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>`,34)]))}const b=n(e,[["render",o]]);export{D as __pageData,b as default};

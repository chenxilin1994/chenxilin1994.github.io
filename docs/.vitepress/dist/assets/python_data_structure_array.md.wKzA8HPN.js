import{_ as n,c as a,o as l,a2 as p}from"./chunks/framework.D30IVGRC.js";const D=JSON.parse('{"title":"数据结构基础：数组的全面解析与Python实现","description":"","frontmatter":{"layout":"doc","title":"数据结构基础：数组的全面解析与Python实现","editLink":true},"headers":[],"relativePath":"python/data_structure/array.md","filePath":"python/data_structure/array.md"}'),e={name:"python/data_structure/array.md"};function o(t,s,r,c,F,y){return l(),a("div",null,s[0]||(s[0]=[p(`<h1 id="数组-数据结构的基石" tabindex="-1">数组：数据结构的基石 <a class="header-anchor" href="#数组-数据结构的基石" aria-label="Permalink to &quot;数组：数据结构的基石&quot;">​</a></h1><h2 id="第一章-数组基础理论" tabindex="-1">第一章 数组基础理论 <a class="header-anchor" href="#第一章-数组基础理论" aria-label="Permalink to &quot;第一章 数组基础理论&quot;">​</a></h2><h3 id="_1-1-数组的定义与特性" tabindex="-1">1.1 数组的定义与特性 <a class="header-anchor" href="#_1-1-数组的定义与特性" aria-label="Permalink to &quot;1.1 数组的定义与特性&quot;">​</a></h3><p>数组（Array）是一种<strong>线性数据结构</strong>，由相同类型元素的集合组成，存储在<strong>连续的内存空间</strong>中。其核心特征：</p><ul><li><strong>同构性</strong>：所有元素类型相同</li><li><strong>连续性</strong>：内存地址连续分配</li><li><strong>确定性</strong>：创建时需指定容量（静态数组）</li><li><strong>随机访问</strong>：通过索引直接访问任意元素</li></ul><h3 id="_1-2-内存结构解析" tabindex="-1">1.2 内存结构解析 <a class="header-anchor" href="#_1-2-内存结构解析" aria-label="Permalink to &quot;1.2 内存结构解析&quot;">​</a></h3><p>假设存储int类型数组（4字节/元素）：</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#BABED8;">索引：   </span><span style="color:#F78C6C;">0</span><span style="color:#F78C6C;">       1</span><span style="color:#F78C6C;">       2</span><span style="color:#F78C6C;">        3</span></span>
<span class="line"><span style="color:#BABED8;">地址：</span><span style="color:#C792EA;">0x</span><span style="color:#F78C6C;">1000</span><span style="color:#C792EA;"> 0x</span><span style="color:#F78C6C;">1004</span><span style="color:#C792EA;"> 0x</span><span style="color:#F78C6C;">1008</span><span style="color:#C792EA;"> 0x</span><span style="color:#F78C6C;">100C</span></span>
<span class="line"><span style="color:#BABED8;">值：   </span><span style="color:#F78C6C;">10</span><span style="color:#F78C6C;">     20</span><span style="color:#F78C6C;">     30</span><span style="color:#F78C6C;">      40</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>元素地址计算公式：<br><code>address[i] = base_address + i * sizeof(type)</code></p><h3 id="_1-3-核心操作复杂度" tabindex="-1">1.3 核心操作复杂度 <a class="header-anchor" href="#_1-3-核心操作复杂度" aria-label="Permalink to &quot;1.3 核心操作复杂度&quot;">​</a></h3><table tabindex="0"><thead><tr><th>操作</th><th>时间复杂度</th><th>说明</th></tr></thead><tbody><tr><td>访问元素</td><td>O(1)</td><td>直接计算内存地址</td></tr><tr><td>插入元素（末尾）</td><td>O(1)</td><td>动态数组的摊销时间复杂度</td></tr><tr><td>插入元素（中间）</td><td>O(n)</td><td>需要移动后续元素</td></tr><tr><td>删除元素</td><td>O(n)</td><td>需要移动后续元素</td></tr><tr><td>查找元素</td><td>O(n)</td><td>无序数组需要线性扫描</td></tr></tbody></table><h2 id="第二章-python中的数组实现" tabindex="-1">第二章 Python中的数组实现 <a class="header-anchor" href="#第二章-python中的数组实现" aria-label="Permalink to &quot;第二章 Python中的数组实现&quot;">​</a></h2><h3 id="_2-1-列表的本质" tabindex="-1">2.1 列表的本质 <a class="header-anchor" href="#_2-1-列表的本质" aria-label="Permalink to &quot;2.1 列表的本质&quot;">​</a></h3><p>Python的<code>list</code>实际上是<strong>动态数组</strong>实现，具有以下特性：</p><ul><li>自动扩容/缩容机制</li><li>可存储异构数据（但推荐保持同构）</li><li>预分配额外空间减少频繁扩容</li></ul><h3 id="_2-2-动态数组扩容策略" tabindex="-1">2.2 动态数组扩容策略 <a class="header-anchor" href="#_2-2-动态数组扩容策略" aria-label="Permalink to &quot;2.2 动态数组扩容策略&quot;">​</a></h3><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> sys</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">def</span><span style="color:#82AAFF;"> show_growth</span><span style="color:#89DDFF;">():</span></span>
<span class="line"><span style="color:#BABED8;">    lst </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> []</span></span>
<span class="line"><span style="color:#BABED8;">    last_capacity </span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;"> 0</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    for</span><span style="color:#BABED8;"> i </span><span style="color:#89DDFF;font-style:italic;">in</span><span style="color:#82AAFF;"> range</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">100</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#BABED8;">        lst</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">append</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">i</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">        curr_capacity </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> sys</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getsizeof</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">lst</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> //</span><span style="color:#BABED8;"> sys</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getsizeof</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        if</span><span style="color:#BABED8;"> curr_capacity </span><span style="color:#89DDFF;">!=</span><span style="color:#BABED8;"> last_capacity</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#82AAFF;">            print</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">f</span><span style="color:#C3E88D;">&quot;元素数: </span><span style="color:#F78C6C;">{</span><span style="color:#82AAFF;">i</span><span style="color:#89DDFF;">+</span><span style="color:#F78C6C;">1}</span><span style="color:#C3E88D;">, 容量: </span><span style="color:#F78C6C;">{</span><span style="color:#82AAFF;">curr_capacity</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">            last_capacity </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> curr_capacity</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">show_growth</span><span style="color:#89DDFF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 输出示例：</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 元素数: 1, 容量: 4</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 元素数: 5, 容量: 8</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 元素数: 9, 容量: 16</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 元素数: 17, 容量: 25</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 元素数: 26, 容量: 35...</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>扩容策略：新容量 = 当前容量 * ~1.125（CPython实现）</p><h3 id="_2-3-基础操作实现" tabindex="-1">2.3 基础操作实现 <a class="header-anchor" href="#_2-3-基础操作实现" aria-label="Permalink to &quot;2.3 基础操作实现&quot;">​</a></h3><h4 id="创建数组" tabindex="-1">创建数组 <a class="header-anchor" href="#创建数组" aria-label="Permalink to &quot;创建数组&quot;">​</a></h4><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 标准创建</span></span>
<span class="line"><span style="color:#BABED8;">arr </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 3</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 4</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 5</span><span style="color:#89DDFF;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 使用生成式</span></span>
<span class="line"><span style="color:#BABED8;">zeros </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> [</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">]</span><span style="color:#89DDFF;"> *</span><span style="color:#F78C6C;"> 10</span><span style="color:#676E95;font-style:italic;">  # [0, 0, ..., 0]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 类型限定（array模块）</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> array</span></span>
<span class="line"><span style="color:#BABED8;">int_arr </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> array</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">array</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">i</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 3</span><span style="color:#89DDFF;">])</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h4 id="访问元素" tabindex="-1">访问元素 <a class="header-anchor" href="#访问元素" aria-label="Permalink to &quot;访问元素&quot;">​</a></h4><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 正索引</span></span>
<span class="line"><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">arr</span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">])</span><span style="color:#676E95;font-style:italic;">  # 第一个元素 → 1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 负索引</span></span>
<span class="line"><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">arr</span><span style="color:#89DDFF;">[-</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">])</span><span style="color:#676E95;font-style:italic;"> # 最后一个元素 → 5</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 切片操作</span></span>
<span class="line"><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">arr</span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">])</span><span style="color:#676E95;font-style:italic;"> # [2, 3, 4]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h4 id="插入操作" tabindex="-1">插入操作 <a class="header-anchor" href="#插入操作" aria-label="Permalink to &quot;插入操作&quot;">​</a></h4><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 末尾追加（O(1)）</span></span>
<span class="line"><span style="color:#BABED8;">arr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">append</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">6</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 指定位置插入（O(n)）</span></span>
<span class="line"><span style="color:#BABED8;">arr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">insert</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 2.5</span><span style="color:#89DDFF;">)</span><span style="color:#676E95;font-style:italic;">  # [1, 2, 2.5, 3, 4, 5, 6]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h4 id="删除操作" tabindex="-1">删除操作 <a class="header-anchor" href="#删除操作" aria-label="Permalink to &quot;删除操作&quot;">​</a></h4><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 按值删除（O(n)）</span></span>
<span class="line"><span style="color:#BABED8;">arr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">remove</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">2.5</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 按索引删除（O(n)）</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">del</span><span style="color:#BABED8;"> arr</span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 弹出末尾（O(1)）</span></span>
<span class="line"><span style="color:#BABED8;">last </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> arr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">pop</span><span style="color:#89DDFF;">()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="第三章-高级操作与应用" tabindex="-1">第三章 高级操作与应用 <a class="header-anchor" href="#第三章-高级操作与应用" aria-label="Permalink to &quot;第三章 高级操作与应用&quot;">​</a></h2><h3 id="_3-1-内存视图" tabindex="-1">3.1 内存视图 <a class="header-anchor" href="#_3-1-内存视图" aria-label="Permalink to &quot;3.1 内存视图&quot;">​</a></h3><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 创建数组</span></span>
<span class="line"><span style="color:#BABED8;">original </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> array</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">array</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">d</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> [</span><span style="color:#F78C6C;">1.0</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 2.0</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 3.0</span><span style="color:#89DDFF;">])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 获取内存视图</span></span>
<span class="line"><span style="color:#BABED8;">mem_view </span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;"> memoryview</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">original</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 修改视图影响原数组</span></span>
<span class="line"><span style="color:#BABED8;">mem_view</span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">]</span><span style="color:#89DDFF;"> =</span><span style="color:#F78C6C;"> 4.0</span></span>
<span class="line"><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">original</span><span style="color:#89DDFF;">)</span><span style="color:#676E95;font-style:italic;">  # array(&#39;d&#39;, [1.0, 4.0, 3.0])</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="_3-2-数组旋转算法" tabindex="-1">3.2 数组旋转算法 <a class="header-anchor" href="#_3-2-数组旋转算法" aria-label="Permalink to &quot;3.2 数组旋转算法&quot;">​</a></h3><p>实现将数组元素向右旋转k次：</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#C792EA;">def</span><span style="color:#82AAFF;"> rotate</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">nums</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> k</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#BABED8;">    n </span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;"> len</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">nums</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">    k </span><span style="color:#89DDFF;">%=</span><span style="color:#BABED8;"> n</span></span>
<span class="line"><span style="color:#BABED8;">    nums</span><span style="color:#89DDFF;">[:]</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> nums</span><span style="color:#89DDFF;">[-</span><span style="color:#BABED8;">k</span><span style="color:#89DDFF;">:]</span><span style="color:#89DDFF;"> +</span><span style="color:#BABED8;"> nums</span><span style="color:#89DDFF;">[:-</span><span style="color:#BABED8;">k</span><span style="color:#89DDFF;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 示例</span></span>
<span class="line"><span style="color:#BABED8;">arr </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#82AAFF;">rotate</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">arr</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">arr</span><span style="color:#89DDFF;">)</span><span style="color:#676E95;font-style:italic;">  # [4,5,1,2,3]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="_3-3-多维数组实现" tabindex="-1">3.3 多维数组实现 <a class="header-anchor" href="#_3-3-多维数组实现" aria-label="Permalink to &quot;3.3 多维数组实现&quot;">​</a></h3><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 二维数组（列表推导式）</span></span>
<span class="line"><span style="color:#BABED8;">matrix </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> [[</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">]*</span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;font-style:italic;"> for</span><span style="color:#BABED8;"> _ </span><span style="color:#89DDFF;font-style:italic;">in</span><span style="color:#82AAFF;"> range</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">)]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 访问元素</span></span>
<span class="line"><span style="color:#BABED8;">matrix</span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">][</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">]</span><span style="color:#89DDFF;"> =</span><span style="color:#F78C6C;"> 10</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 锯齿数组</span></span>
<span class="line"><span style="color:#BABED8;">jagged </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> [</span></span>
<span class="line"><span style="color:#89DDFF;">    [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">],</span></span>
<span class="line"><span style="color:#89DDFF;">    [</span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">],</span></span>
<span class="line"><span style="color:#89DDFF;">    [</span><span style="color:#F78C6C;">6</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">7</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">8</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">9</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#89DDFF;">]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="第四章-性能优化实践" tabindex="-1">第四章 性能优化实践 <a class="header-anchor" href="#第四章-性能优化实践" aria-label="Permalink to &quot;第四章 性能优化实践&quot;">​</a></h2><h3 id="_4-1-预分配空间" tabindex="-1">4.1 预分配空间 <a class="header-anchor" href="#_4-1-预分配空间" aria-label="Permalink to &quot;4.1 预分配空间&quot;">​</a></h3><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 低效方式</span></span>
<span class="line"><span style="color:#BABED8;">result </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> []</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#BABED8;"> i </span><span style="color:#89DDFF;font-style:italic;">in</span><span style="color:#82AAFF;"> range</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">10000</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#BABED8;">    result</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">append</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">i</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 高效方式</span></span>
<span class="line"><span style="color:#BABED8;">result </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> [</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">]</span><span style="color:#89DDFF;"> *</span><span style="color:#F78C6C;"> 10000</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#BABED8;"> i </span><span style="color:#89DDFF;font-style:italic;">in</span><span style="color:#82AAFF;"> range</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">10000</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#BABED8;">    result</span><span style="color:#89DDFF;">[</span><span style="color:#BABED8;">i</span><span style="color:#89DDFF;">]</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> i</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="_4-2-批量操作" tabindex="-1">4.2 批量操作 <a class="header-anchor" href="#_4-2-批量操作" aria-label="Permalink to &quot;4.2 批量操作&quot;">​</a></h3><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 低效</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#BABED8;"> item </span><span style="color:#89DDFF;font-style:italic;">in</span><span style="color:#BABED8;"> data</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#BABED8;">    lst</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">append</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">item</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 高效</span></span>
<span class="line"><span style="color:#BABED8;">lst</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">extend</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">data</span><span style="color:#89DDFF;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="_4-3-内存优化对比" tabindex="-1">4.3 内存优化对比 <a class="header-anchor" href="#_4-3-内存优化对比" aria-label="Permalink to &quot;4.3 内存优化对比&quot;">​</a></h3><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> pympler </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> asizeof</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">lst </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> [</span><span style="color:#BABED8;">i </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#BABED8;"> i </span><span style="color:#89DDFF;font-style:italic;">in</span><span style="color:#82AAFF;"> range</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1000</span><span style="color:#89DDFF;">)]</span></span>
<span class="line"><span style="color:#BABED8;">arr </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> array</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">array</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">i</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> lst</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">f</span><span style="color:#C3E88D;">&quot;列表内存: </span><span style="color:#F78C6C;">{</span><span style="color:#82AAFF;">asizeof</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">asizeof</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">lst</span><span style="color:#89DDFF;">)/</span><span style="color:#F78C6C;">1024</span><span style="color:#C792EA;">:.2f</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;"> KB&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">f</span><span style="color:#C3E88D;">&quot;数组内存: </span><span style="color:#F78C6C;">{</span><span style="color:#82AAFF;">asizeof</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">asizeof</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">arr</span><span style="color:#89DDFF;">)/</span><span style="color:#F78C6C;">1024</span><span style="color:#C792EA;">:.2f</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;"> KB&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 典型输出：</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 列表内存: 36.12 KB</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 数组内存: 4.12 KB</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="第五章-典型应用场景" tabindex="-1">第五章 典型应用场景 <a class="header-anchor" href="#第五章-典型应用场景" aria-label="Permalink to &quot;第五章 典型应用场景&quot;">​</a></h2><h3 id="_5-1-位图索引" tabindex="-1">5.1 位图索引 <a class="header-anchor" href="#_5-1-位图索引" aria-label="Permalink to &quot;5.1 位图索引&quot;">​</a></h3><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#C792EA;">class</span><span style="color:#FFCB6B;"> Bitmap</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#C792EA;">    def</span><span style="color:#82AAFF;"> __init__</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> size</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#BABED8;">        self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">size</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> size</span></span>
<span class="line"><span style="color:#BABED8;">        self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">bits</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> array</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">array</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">B</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> [</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">]*(</span><span style="color:#89DDFF;"> (</span><span style="color:#82AAFF;">size</span><span style="color:#89DDFF;">+</span><span style="color:#F78C6C;">7</span><span style="color:#89DDFF;">)//</span><span style="color:#F78C6C;">8</span><span style="color:#89DDFF;"> ))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">    def</span><span style="color:#82AAFF;"> set_bit</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> pos</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#BABED8;">        index </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> pos </span><span style="color:#89DDFF;">//</span><span style="color:#F78C6C;"> 8</span></span>
<span class="line"><span style="color:#BABED8;">        offset </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> pos </span><span style="color:#89DDFF;">%</span><span style="color:#F78C6C;"> 8</span></span>
<span class="line"><span style="color:#BABED8;">        self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">bits</span><span style="color:#89DDFF;">[</span><span style="color:#F07178;">index</span><span style="color:#89DDFF;">]</span><span style="color:#89DDFF;"> |=</span><span style="color:#F78C6C;"> 1</span><span style="color:#89DDFF;"> &lt;&lt;</span><span style="color:#BABED8;"> offset</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">    def</span><span style="color:#82AAFF;"> test_bit</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> pos</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#BABED8;">        index </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> pos </span><span style="color:#89DDFF;">//</span><span style="color:#F78C6C;"> 8</span></span>
<span class="line"><span style="color:#BABED8;">        offset </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> pos </span><span style="color:#89DDFF;">%</span><span style="color:#F78C6C;"> 8</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        return</span><span style="color:#89DDFF;"> (</span><span style="color:#BABED8;">self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">bits</span><span style="color:#89DDFF;">[</span><span style="color:#F07178;">index</span><span style="color:#89DDFF;">]</span><span style="color:#89DDFF;"> &amp;</span><span style="color:#89DDFF;"> (</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;"> &lt;&lt;</span><span style="color:#BABED8;"> offset</span><span style="color:#89DDFF;">))</span><span style="color:#89DDFF;"> !=</span><span style="color:#F78C6C;"> 0</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h3 id="_5-2-环形缓冲区" tabindex="-1">5.2 环形缓冲区 <a class="header-anchor" href="#_5-2-环形缓冲区" aria-label="Permalink to &quot;5.2 环形缓冲区&quot;">​</a></h3><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#C792EA;">class</span><span style="color:#FFCB6B;"> CircularBuffer</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#C792EA;">    def</span><span style="color:#82AAFF;"> __init__</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> capacity</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#BABED8;">        self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">buffer</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> [None]</span><span style="color:#89DDFF;"> *</span><span style="color:#BABED8;"> capacity</span></span>
<span class="line"><span style="color:#BABED8;">        self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">head</span><span style="color:#89DDFF;"> =</span><span style="color:#F78C6C;"> 0</span></span>
<span class="line"><span style="color:#BABED8;">        self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">tail</span><span style="color:#89DDFF;"> =</span><span style="color:#F78C6C;"> 0</span></span>
<span class="line"><span style="color:#BABED8;">        self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">size</span><span style="color:#89DDFF;"> =</span><span style="color:#F78C6C;"> 0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">    def</span><span style="color:#82AAFF;"> enqueue</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> item</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        if</span><span style="color:#BABED8;"> self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">size</span><span style="color:#89DDFF;"> ==</span><span style="color:#82AAFF;"> len</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;">self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">buffer</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#BABED8;">            self</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">_expand</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#BABED8;">        self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">buffer</span><span style="color:#89DDFF;">[</span><span style="color:#BABED8;">self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">tail</span><span style="color:#89DDFF;">]</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> item</span></span>
<span class="line"><span style="color:#BABED8;">        self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">tail</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> (</span><span style="color:#BABED8;">self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">tail</span><span style="color:#89DDFF;"> +</span><span style="color:#F78C6C;"> 1</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> %</span><span style="color:#82AAFF;"> len</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;">self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">buffer</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">        self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">size</span><span style="color:#89DDFF;"> +=</span><span style="color:#F78C6C;"> 1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">    def</span><span style="color:#82AAFF;"> _expand</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#BABED8;">        new_cap </span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;"> len</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;">self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">buffer</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> *</span><span style="color:#F78C6C;"> 2</span></span>
<span class="line"><span style="color:#BABED8;">        new_buffer </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> [None]</span><span style="color:#89DDFF;"> *</span><span style="color:#BABED8;"> new_cap</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        for</span><span style="color:#BABED8;"> i </span><span style="color:#89DDFF;font-style:italic;">in</span><span style="color:#82AAFF;"> range</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;">self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">size</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#BABED8;">            new_buffer</span><span style="color:#89DDFF;">[</span><span style="color:#BABED8;">i</span><span style="color:#89DDFF;">]</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">buffer</span><span style="color:#89DDFF;">[(</span><span style="color:#BABED8;">self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">head </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> i</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> %</span><span style="color:#82AAFF;"> len</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;">self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">buffer</span><span style="color:#89DDFF;">)]</span></span>
<span class="line"><span style="color:#BABED8;">        self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">buffer</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> new_buffer</span></span>
<span class="line"><span style="color:#BABED8;">        self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">head</span><span style="color:#89DDFF;"> =</span><span style="color:#F78C6C;"> 0</span></span>
<span class="line"><span style="color:#BABED8;">        self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">tail</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">size</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><h2 id="练习题" tabindex="-1">练习题 <a class="header-anchor" href="#练习题" aria-label="Permalink to &quot;练习题&quot;">​</a></h2><ol><li>实现数组去重算法，要求时间复杂度O(n)，空间复杂度O(1)</li><li>编写函数找出数组中消失的数字（LeetCode 448）</li><li>实现两个有序数组的归并排序</li><li>设计循环双端数组，支持O(1)时间的头尾插入/删除</li></ol><h3 id="附录-时间复杂度验证实验" tabindex="-1">附录：时间复杂度验证实验 <a class="header-anchor" href="#附录-时间复杂度验证实验" aria-label="Permalink to &quot;附录：时间复杂度验证实验&quot;">​</a></h3><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> timeit</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">def</span><span style="color:#82AAFF;"> test_append</span><span style="color:#89DDFF;">():</span></span>
<span class="line"><span style="color:#BABED8;">    lst </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> []</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    for</span><span style="color:#BABED8;"> i </span><span style="color:#89DDFF;font-style:italic;">in</span><span style="color:#82AAFF;"> range</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">100000</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#BABED8;">        lst</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">append</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">i</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">def</span><span style="color:#82AAFF;"> test_insert</span><span style="color:#89DDFF;">():</span></span>
<span class="line"><span style="color:#BABED8;">    lst </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> []</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    for</span><span style="color:#BABED8;"> i </span><span style="color:#89DDFF;font-style:italic;">in</span><span style="color:#82AAFF;"> range</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1000</span><span style="color:#89DDFF;">):</span><span style="color:#676E95;font-style:italic;">  # 数量级减少</span></span>
<span class="line"><span style="color:#BABED8;">        lst</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">insert</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> i</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">尾部追加耗时:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> timeit</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">timeit</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">test_append</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> number</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">100</span><span style="color:#89DDFF;">))</span></span>
<span class="line"><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">头部插入耗时:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> timeit</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">timeit</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">test_insert</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> number</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">100</span><span style="color:#89DDFF;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 典型输出：</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 尾部追加耗时: 0.89秒</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 头部插入耗时: 2.31秒 （虽然只操作1/100数据量）</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div>`,51)]))}const b=n(e,[["render",o]]);export{D as __pageData,b as default};
